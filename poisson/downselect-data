#!/usr/bin/env python

"""a script that selects subsets of the data and summarizes the detection statistic
"""
__author__ = "Reed Essick (reed.essick@gmail.com)"

#-------------------------------------------------

import os

import numpy as np
import h5py

from argparse import ArgumentParser

### non-standard libraries
import utils

#-------------------------------------------------

parser = ArgumentParser(description=__doc__)

parser.add_argument('hdf5', type=str)

parser.add_argument('-v', '--verbose', default=False, action='store_true')

parser.add_argument('-o', '--output-dir', default='.', type=str)
parser.add_argument('-t', '--tag', default='', type=str)

args = parser.parse_args()

args.output_dir = os.path.abspath(args.output_dir)
if not os.path.exists(args.output_dir):
    os.makedirs(args.output_dir)

if args.tag:
    args.tag = "_"+args.tag

#-------------------------------------------------

# load data
if args.verbose:
    print('loading data from: '+args.hdf5)
trials = []
with h5py.File(args.hdf5, 'r') as obj:
    group = obj['trials']
    for trial in range(obj['parameters'].attrs['num_trials']):
        name = 'trial-%d'%trial
        data = np.concatenate((group[name]['noise'][:], group[name]['signal'][:]))
        trials.append((name, len(data), data))

if args.verbose:
    print('found %d trials'%len(trials))

#------------------------

if args.verbose:
    print('iteratively adding data to maximize H-test statistic')

# first order trials by counts
trials.sort(key=lambda x: x[1]) ### smallest counts first

raise NotImplementedError('''\
iteratively compute H-test statistic as we include more and more data
    utils.htest_statistic(data) --> utils.htest_significance (monotonic with the statistic)
    can I do this without repeatedly concatenating arrays?
    can I allocate one big array, dump all observations into it, and then slice it as needed?
        --> will this actually be faster?
''')

#------------------------

outpath = os.path.join(args.output_dir, 'downselect-data%s.hdf5'%args.tag)
if args.verbose:
    print('writing: '+outpath)

raise NotImplementedError('''\
save to disk:
    order of trials as included
    H-test statistic computed for each subset of data

downstream code can then pick up subsets of the data chosen based on the H-test stat vs which trials curve
''')
