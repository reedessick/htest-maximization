#!/usr/bin/env python

"""a script that selects subsets of the data and summarizes the detection statistic
"""
__author__ = "Reed Essick (reed.essick@gmail.com)"

#-------------------------------------------------

import os

import numpy as np
import h5py

from argparse import ArgumentParser

### non-standard libraries
import utils

#-------------------------------------------------

parser = ArgumentParser(description=__doc__)

parser.add_argument('hdf5', type=str)

parser.add_argument('-v', '--verbose', default=False, action='store_true')

parser.add_argument('-o', '--output-dir', default='.', type=str)
parser.add_argument('-t', '--tag', default='', type=str)

args = parser.parse_args()

if not os.path.exists(args.output_dir):
    os.makedirs(args.output_dir)

if args.tag:
    args.tag = "_"+args.tag

#-------------------------------------------------

raise NotImplementedError('''\
load data from hdf5
order trials by their total number of counts (smallest first)
iteratively compute H-test statistic as we include more and more data
    utils.htest_statistic(data) --> utils.htest_significance (monotonic with the statistic)

save to disk:
    order of trials as included
    H-test statistic computed for each subset of data

downstream code can then pick up subsets of the data chosen based on the H-test stat vs which trials curve
''')
