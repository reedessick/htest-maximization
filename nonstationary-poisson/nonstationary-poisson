#!/bin/bash

### a simple script to generate random realizations from a Poisson model (with nonstationary noise rates) and process them with the H-test selection algorithm
### Reed Essick (reed.essick@gmail.com)

#-------------------------------------------------

### declare mapping between signal models and output directories
declare -A SIGNAL_MODEL
declare -A HARMONICS
declare -A NUM

# measure the null distribution when fitting for harmonics=(1,2,4)
SIGNAL_MODEL["null-124"]="--signal-mean-differential-rate 0.0 --periodic-signal-component 1 0.0 0.0 --periodic-signal-component 2 0.0 0.0 --periodic-signal-component 4 0.0 0.75"
HARMONICS["null-124"]="--harmonic 1 --harmonic 2 --harmonic 4"
NUM["null-124"]=1000

# inject a very weak signal with harmonics=(1,2,4)
SIGNAL_MODEL["small"]="--signal-mean-differential-rate 0.1 --periodic-signal-component 1 0.03 0.0 --periodic-signal-component 2 0.05 0.0 --periodic-signal-component 4 0.02 0.75"
HARMONICS["small"]="--harmonic 1 --harmonic 2 --harmonic 4"
NUM["small"]=1000

# inject a weak signal with harmonics=(1,2,4)
SIGNAL_MODEL["medium"]="--signal-mean-differential-rate 1.0 --periodic-signal-component 1 0.3 0.0 --periodic-signal-component 2 0.5 0.0 --periodic-signal-component 4 0.2 0.75"
HARMONICS["medium"]="--harmonic 1 --harmonic 2 --harmonic 4"
NUM["medium"]=4000

# inject a large signal with harmonics=(1,2,4)
SIGNAL_MODEL["large"]="--signal-mean-differential-rate 10.0 --periodic-signal-component 1 3.0 0.0 --periodic-signal-component 2 5.0 0.0 --periodic-signal-component 4 2.0 0.75"
HARMONICS["large"]="--harmonic 1 --harmonic 2 --harmonic 4"
NUM["large"]=1000

#------------------------

### declare which signal models we want to run

BASEDIRS="null-124 small medium large"
#BASEDIRS="medium"

#-------------------------------------------------

### generate many realizations from the same process for each signal model

for basedir in $BASEDIRS
do

    for seed in $(seq 1 ${NUM[$basedir]})
    do
        tag="seed-$seed"
        outdir="${basedir}/${tag}"

        echo "-------------------------"
        echo "    processing: $basedir $tag"
        echo "-------------------------"

        ### predict file names

        all="${outdir}/make-nonstationary-data_${tag}.hdf5"
        subset="${outdir}/downselect-nonstationary-data_${tag}.hdf5"
        random="${outdir}/downselect-nonstationary-data_random-${tag}.hdf5"

        #----------------

        ### generate synthetic data realizations

#        echo \
        ./make-nonstationary-data \
            --output-dir $outdir \
            --tag $tag \
            --seed $seed \
            --num-trials 1000 \
            --noise-mean-differential-rate-bounds 50.0 150.0 \
            ${SIGNAL_MODEL[$basedir]} \
            --Verbose \
            --histogram

        #----------------

        ### make basic plots summarizing the detection statistics and downselecting data

#        echo \
        ./downselect-nonstationary-data \
            $all \
            "increasing_count" \
            --output-dir $outdir \
            --tag $tag \
            --Verbose \
            --trajectory 

#        echo \
        ./downselect-nonstationary-data \
            $all \
            "random" \
            --output-dir $outdir \
            --tag random-$tag \
            --Verbose \
            --trajectory 

        #----------------

        ### actually fit the data and determine whether there are biases

        # fit all data
#        echo \
        ./fit-nonstationary-data \
            $all \
            ${HARMONICS[$basedir]} \
            --output-dir $outdir \
            --tag $tag-all \
            --Verbose \
            --histogram

        # fit the selected subset of data
#        echo \
        ./fit-nonstationary-data \
            $subset \
            ${HARMONICS[$basedir]} \
            --output-dir $outdir \
            --tag $tag-subset \
            --Verbose \
            --histogram

#        echo \
        ./fit-nonstationary-data \
            $subset \
            ${HARMONICS[$basedir]} \
            --random-subset-same-num \
            --output-dir $outdir \
            --tag $tag-subset-randomized \
            --Verbose \
            --histogram

        # fit the random subset
#        echo \
        ./fit-nonstationary-data \
            $random \
            ${HARMONICS[$basedir]} \
            --output-dir $outdir \
            --tag $tag-random \
            --Verbose \
            --histogram

#        echo \
        ./fit-nonstationary-data \
            $random \
            ${HARMONICS[$basedir]} \
            --random-subset-same-num \
            --output-dir $outdir \
            --tag $tag-random-randomized \
            --Verbose \
            --histogram

        # fit completely random subset
#        echo \
        ./fit-nonstationary-data \
            $subset \
            ${HARMONICS[$basedir]} \
            --random-subset \
            --output-dir $outdir \
            --tag $tag-completely-randomized \
            --Verbose \
            --histogram

    done

    #--------------------

    echo "-------------------------"
    echo "summarizing experiments"



    echo "FIXME: the following has not yet been updated!"
    exit 1
















#    echo \
    ./compare-fit \
        --all-data-hdf5 ${basedir}/*/fit-nonstationary-data*all.hdf5 \
        --subset-data-hdf5 ${basedir}/*/fit-nonstationary-data_*subset.hdf5 \
        --output-dir $basedir \
        --Verbose

#    echo \
    ./compare-fit \
        --all-data-hdf5 ${basedir}/*/fit-nonstationary-data*all.hdf5 \
        --subset-data-hdf5 ${basedir}/*/fit-nonstationary-data_*subset-randomized.hdf5 \
        --output-dir $basedir \
        --tag subset-randomized \
        --Verbose

#    echo \
    ./compare-fit \
        --all-data-hdf5 ${basedir}/*/fit-nonstationary-data*all.hdf5 \
        --subset-data-hdf5 ${basedir}/*/fit-nonstationary-data_*random.hdf5 \
        --output-dir $basedir \
        --tag random \
        --Verbose

#    echo \
    ./compare-fit \
        --all-data-hdf5 ${basedir}/*/fit-nonstationary-data*all.hdf5 \
        --subset-data-hdf5 ${basedir}/*/fit-nonstationary-data_*random-randomized.hdf5 \
        --output-dir $basedir \
        --tag random-randomized \
        --Verbose

#    echo \
    ./compare-fit \
        --all-data-hdf5 ${basedir}/*/fit-nonstationary-data*all.hdf5 \
        --subset-data-hdf5 ${basedir}/*/fit-nonstationary-data_*completely-randomized.hdf5 \
        --output-dir $basedir \
        --tag completely-randomized \
        --Verbose

    #---

#    echo \
    ./plot-conditioned-means \
        ${basedir}/compare-fit-all.hdf5 \
        --output-dir $basedir \
        --tag all \
        --verbose

#    echo \
    ./plot-conditioned-means \
        ${basedir}/compare-fit-subset.hdf5 \
        --output-dir $basedir \
        --tag subset \
        --verbose

#    echo \
    ./plot-conditioned-means \
        ${basedir}/compare-fit-subset_subset-randomized.hdf5 \
        --output-dir $basedir \
        --tag subset-randomized \
        --verbose

#    echo \
    ./plot-conditioned-means \
        ${basedir}/compare-fit-subset_random.hdf5 \
        --output-dir $basedir \
        --tag random \
        --verbose

#    echo \
    ./plot-conditioned-means \
        ${basedir}/compare-fit-subset_random-randomized.hdf5 \
        --output-dir $basedir \
        --tag random-randomized \
        --verbose

#    echo \
    ./plot-conditioned-means \
        ${basedir}/compare-fit-subset_completely-randomized.hdf5 \
        --output-dir $basedir \
        --tag completely-randomized \
        --verbose

    #---

#    echo \
    ./compare-Hstat \
        --hdf5 ${basedir}/*/downselect-data*.hdf5 \
        --output-dir $basedir \
        --verbose

#    echo \
    ./compare-Hstat \
        --hdf5 ${basedir}/*/downselect-data_random*.hdf5 \
        --output-dir $basedir \
        --tag random \
        --verbose

done
